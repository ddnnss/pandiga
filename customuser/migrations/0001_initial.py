# Generated by Django 2.2.7 on 2020-04-28 05:19

import customuser.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tariff', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
        ('staticPage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user', verbose_name='Фото')),
                ('photo', models.CharField(blank=True, max_length=255, null=True, verbose_name='VK аватар')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Эл. почта')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('partner_code', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Партнерский код')),
                ('balance', models.IntegerField(default=0, verbose_name='Баланс')),
                ('partner_balance', models.IntegerField(default=0, verbose_name='Партнерский баланс')),
                ('rating', models.IntegerField(default=0, verbose_name='Рейтинг')),
                ('tariff_update', models.DateField(blank=True, null=True, verbose_name='Дата начала тарифа')),
                ('tariff_expire', models.DateField(blank=True, null=True, verbose_name='Дата завершения тарифа')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Заказчик?')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокирован?')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Телефон подтвержден?')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='EMail подтвержден?')),
                ('verify_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код подтверждения')),
                ('notification_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='ID для сообщений')),
                ('technique_added', models.IntegerField(default=0)),
                ('rate_times', models.IntegerField(default=0)),
                ('other_added', models.IntegerField(default=0)),
                ('old_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='staticPage.City', verbose_name='Местоположение')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('tarif', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Тариф', to='tariff.Tarif')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', customuser.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
